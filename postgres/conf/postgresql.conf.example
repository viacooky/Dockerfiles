#------------------------------------------------------------------------------
# 连接与认证
#------------------------------------------------------------------------------
# 控制客户端连接和认证相关的设置

listen_addresses = '*'          # 监听所有 IP 地址，生产环境建议限制为特定 IP（如 'localhost' 或 '192.168.1.0/24'）以提高安全性
hba_file = '/var/lib/postgresql/data/pg_hba.conf'
port = 5432                     # 数据库服务端口号，与 Docker Compose 端口映射一致
max_connections = 1000           # 最大客户端连接数
superuser_reserved_connections = 3 # 为超级用户保留的连接数，保持默认值以确保管理员访问
ssl = off                       # 禁用 SSL 加密，生产环境强烈建议启用（需配置证书，参考 https://www.postgresql.org/docs/17/ssl-tcp.html）
password_encryption = scram-sha-256 # 使用现代 SCRAM-SHA-256 密码加密协议，符合安全标准

#------------------------------------------------------------------------------
# 资源限制
#------------------------------------------------------------------------------

work_mem = 256MB                # 单个查询操作的内存限制，以提升复杂查询性能，需监控总内存使用
maintenance_work_mem = 256MB      # 维护性操作（如 VACUUM、CREATE INDEX）的内存限制，2GB 足够
huge_pages = try                # 尝试使用大页内存，需操作系统支持（参考 https://www.postgresql.org/docs/17/kernel-resources.html#linux-huge-pages）

#------------------------------------------------------------------------------
# 字符编码
#------------------------------------------------------------------------------
# 设置客户端编码

client_encoding = utf8          # 客户端字符编码为 UTF-8，支持多语言

#------------------------------------------------------------------------------
# 日志记录
#------------------------------------------------------------------------------
# 配置日志以便监控和调试

logging_collector = on          # 启用日志收集器，将日志写入文件
log_directory = 'log'           # 日志存储目录，需确保容器内有写权限（映射到 /var/lib/postgresql/data/log）
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log' # 日志文件名格式，按时间命名
log_rotation_age = 1d           # 日志文件最长保留 1 天，自动轮换
log_rotation_size = 100MB       # 单个日志文件最大尺寸，100MB 适合生产环境
log_min_duration_statement = 1000 # 记录执行超过 1000ms 的慢查询，便于性能优化
log_checkpoints = on            # 记录检查点信息，监控 WAL 性能
log_connections = on            # 记录所有客户端连接，便于审计
log_disconnections = on         # 记录所有客户端断开连接，便于审计
log_lock_waits = on             # 记录长锁等待（超过 deadlock_timeout），帮助诊断锁问题
log_temp_files = 0              # 记录所有临时文件使用，0 表示记录所有临时文件

#------------------------------------------------------------------------------
# 自动清理
#------------------------------------------------------------------------------
# 配置自动清理以管理死元组和优化性能

# autovacuum = on                 # 启用自动清理死元组，防止表膨胀
# autovacuum_max_workers = 5      # 同时运行的最大自动清理进程数，5 个足够中等负载
# autovacuum_naptime = 1min       # 自动清理进程唤醒间隔，1 分钟适合高写入环境
# autovacuum_vacuum_threshold = 50 # 触发 VACUUM 操作的更新阈值，50 行适合频繁更新
# autovacuum_analyze_threshold = 50 # 触发 ANALYZE 操作的更新阈值，50 行适合频繁更新
# autovacuum_vacuum_cost_limit = 1000 # 提高自动清理效率，1000 平衡性能和资源
# autovacuum_vacuum_scale_factor = 0.1 # 表大小 10% 的死元组触发清理，适合高更新表
# log_autovacuum_min_duration = 0 # 记录所有自动清理操作，便于监控
# track_io_timing = on            # 监控 I/O 性能，需启用 pg_stat_statements 扩展

#------------------------------------------------------------------------------
# 本地化设置
#------------------------------------------------------------------------------
# 配置日期、时间和字符编码

# datestyle = 'iso, ymd'          # 日期格式为 ISO 标准（年-月-日），适合国际化应用
# timezone = 'Asia/Shanghai'      # 时区设置为中国上海，匹配本地需求
# # lc_messages = 'zh_CN.utf8'     # 系统消息语言为简体中文，需安装中文语言包
# # lc_monetary = 'zh_CN.utf8'     # 货币格式为中国标准，需安装中文语言包
# # lc_numeric = 'zh_CN.utf8'      # 数字格式为中国标准，需安装中文语言包
# # lc_time = 'zh_CN.utf8'         # 时间格式为中国标准，需安装中文语言包
# default_text_search_config = 'pg_catalog.english' # 全文搜索配置，建议安装中文分词插件（如 zhparser）

#------------------------------------------------------------------------------
# 锁管理
#------------------------------------------------------------------------------
# 配置锁行为以避免死锁和性能瓶颈

# deadlock_timeout = 1s           # 死锁检测超时时间，1 秒为默认值
# max_locks_per_transaction = 64  # 每个事务的最大锁数量，64 足够大多数场景



#------------------------------------------------------------------------------
# 统计信息
#------------------------------------------------------------------------------
# 启用统计信息以支持性能监控

# track_activities = on           # 启用会话活动监控，记录活跃会话
# track_counts = on               # 收集数据库统计信息，支持查询优化
# track_io_timing = on            # 记录 I/O 操作耗时，便于性能分析

#------------------------------------------------------------------------------
# 并行查询
#------------------------------------------------------------------------------

# idle_in_transaction_session_timeout = 10min # 终止空闲事务会话，10 分钟防止资源浪费
# lock_timeout = 30s              # 锁等待超时时间，30 秒防止长时间阻塞
# statement_timeout = 0           # 全局查询超时，默认不限制，可根据需求设置